# Copyright 2024-2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:cc_library.bzl", "cc_library")

package(
    default_visibility = ["//ink:__subpackages__"],
)

cc_library(
    name = "native",
    deps = [
        ":brush_behavior_jni",
        ":brush_coat_jni",
        ":brush_family_jni",
        ":brush_jni",
        ":brush_paint_jni",
        ":brush_tip_jni",
        ":easing_function_jni",
    ],
    alwayslink = 1,
)

cc_library(
    name = "brush_jni_helper",
    hdrs = ["brush_jni_helper.h"],
    deps = [
        "//ink/brush",
        "//ink/brush:brush_behavior",
        "//ink/brush:brush_coat",
        "//ink/brush:brush_family",
        "//ink/brush:brush_paint",
        "//ink/brush:brush_tip",
        "//ink/brush:easing_function",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
)

cc_library(
    name = "brush_behavior_jni",
    srcs = ["brush_behavior_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush",
        "//ink/brush:brush_behavior",
        "//ink/brush:easing_function",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_throw_util",
        "//ink/types:duration",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "brush_tip_jni",
    srcs = ["brush_tip_jni.cc"],
    deps = [
        ":brush_behavior_jni",
        ":brush_jni_helper",
        "//ink/brush",
        "//ink/brush:brush_behavior",
        "//ink/brush:brush_tip",
        "//ink/geometry:angle",
        "//ink/geometry:vec",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_throw_util",
        "//ink/types:duration",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "brush_paint_jni",
    srcs = ["brush_paint_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush:brush_paint",
        "//ink/geometry:angle",
        "//ink/geometry:vec",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_string_util",
        "//ink/jni/internal:jni_throw_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "brush_coat_jni",
    srcs = ["brush_coat_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush",
        "//ink/brush:brush_coat",
        "//ink/brush:brush_paint",
        "//ink/brush:brush_tip",
        "//ink/jni/internal:jni_defines",
        "@com_google_absl//absl/log:absl_check",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "brush_family_jni",
    srcs = ["brush_family_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush",
        "//ink/brush:brush_coat",
        "//ink/brush:brush_family",
        "//ink/brush:brush_paint",
        "//ink/brush:brush_tip",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_string_util",
        "//ink/jni/internal:jni_throw_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/types:span",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "brush_jni",
    srcs = ["brush_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush",
        "//ink/brush:brush_family",
        "//ink/color",
        "//ink/color:color_space",
        "//ink/color/internal/jni:color_jni_helper",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_throw_util",
        "@com_google_absl//absl/log:absl_check",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)

cc_library(
    name = "easing_function_jni",
    srcs = ["easing_function_jni.cc"],
    deps = [
        ":brush_jni_helper",
        "//ink/brush:easing_function",
        "//ink/geometry:point",
        "//ink/jni/internal:jni_defines",
        "//ink/jni/internal:jni_throw_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status",
    ] + select({
        "@platforms//os:android": [],
        "//conditions:default": [
            "@rules_jni//jni",
        ],
    }),
    alwayslink = 1,
)
